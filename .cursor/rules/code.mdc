---
description:
globs:
alwaysApply: false
---
# コード規約

## 命名規則
- クラス名はキャメルケース（例: `UserAuthentication`）
- メソッド名はスネークケース（例: `authenticate_user`）
- 変数名はスネークケース（例: `user_email`）
- 定数名は大文字のスネークケース（例: `MAX_LOGIN_ATTEMPTS`）
- ブール値を返すメソッドには `is_` や `has_` などの接頭辞を付けること

## インデント・スペース
- インデントには2スペースを使用すること
- 演算子の前後には1スペースを入れること
- カンマの後には1スペースを入れること
- 行末にスペースを残さないこと

## コードの構造
- 1行あたりの長さは80文字を超えないようにすること
- メソッドは1つの責務のみを持つように設計すること
- クラスは単一責任の原則に従うこと
- 1つのメソッドは20行を超えないことが望ましい

## コメント
- コードが複雑な場合のみコメントを追加すること
- コメントは「何をしているか」ではなく「なぜそうしているか」を説明すること
- クラスやメソッドの目的を説明するドキュメントコメントを追加すること
- TODO コメントには担当者と課題番号を記載すること

## エラー処理
- 例外は適切に処理すること
- 空の rescue ブロックを作らないこと
- エラーメッセージは具体的で理解しやすいものにすること

## テスト
- すべての公開メソッドにはテストを書くこと
- テストはDRYよりも明確さを優先すること
- テスト名は「何をテストしているか」が明確に分かるようにすること

## その他
- マジックナンバーは使用せず、定数として定義すること
- 使用していないコードは削除すること（コメントアウトしたままにしない）
- ネストは3レベル以内に抑えること
